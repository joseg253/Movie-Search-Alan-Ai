[{"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/index.js":"1","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/App.js":"2","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCards/MovieCards.js":"3","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCard/MovieCard.js":"4","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCards/styles.js":"5","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCard/styles.js":"6","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/styles.js":"7","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/ActorCard/ActorCards.js":"8","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/ActorCard/styles.js":"9","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/services/index.js":"10"},{"size":168,"mtime":1610604785014,"results":"11","hashOfConfig":"12"},{"size":3576,"mtime":1610930803055,"results":"13","hashOfConfig":"12"},{"size":2751,"mtime":1610931045990,"results":"14","hashOfConfig":"12"},{"size":3823,"mtime":1610930549412,"results":"15","hashOfConfig":"12"},{"size":583,"mtime":1610931097483,"results":"16","hashOfConfig":"12"},{"size":817,"mtime":1610865514960,"results":"17","hashOfConfig":"12"},{"size":1804,"mtime":1610859658763,"results":"18","hashOfConfig":"12"},{"size":2855,"mtime":1610770545341,"results":"19","hashOfConfig":"12"},{"size":1123,"mtime":1610864579598,"results":"20","hashOfConfig":"12"},{"size":1750,"mtime":1610928285727,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hv6cib",{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/index.js",[],["49","50"],"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/App.js",["51","52","53","54","55","56","57","58","59"],"import React, { useEffect, useState } from \"react\";\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport MovieCards from \"./components/MovieCards/MovieCards\";\nimport useStyles from \"./styles.js\";\nimport { Typography } from \"@material-ui/core\";\nimport movieReel from \"./images/movie_reel.jpg\";\nimport { fetchMovieURL, fetchTVURL } from \"./services/index\";\nimport wordsToNumbers from \"words-to-numbers\";\nimport \"./title.css\";\nconst alanKey =\n  \"94a6a14085b280b6d7526088a358cf202e956eca572e1d8b807a3e2338fdd0dc/prod\";\nconst App = () => {\n  const [movieTitles, setMovieTitles] = useState([]);\n  const classes = useStyles();\n  const [activeTitle, setActiveTitle] = useState(-1);\n  const [url, setURL] = useState(\"\");\n  const target = window.document.getElementsByTagName(\"h1\")[0];\n\n  useEffect(() => {\n    alanBtn({\n      key:\n        \"94a6a14085b280b6d7526088a358cf202e956eca572e1d8b807a3e2338fdd0dc/prod\",\n      onCommand: ({ command, results, number }) => {\n        if (command === \"newTitles\") {\n          setMovieTitles(results);\n          setActiveTitle(-1);\n        } else if (command === \"highlight\") {\n          setActiveTitle((prevActiveTitle) => prevActiveTitle + 1);\n        } else if (command === \"open\") {\n          let parsedNumber =\n            number.length > 2\n              ? wordsToNumbers(number, { fuzzy: true })\n              : number;\n\n          if (typeof parsedNumber == \"string\") {\n            parsedNumber = parseInt(parsedNumber);\n          }\n\n          if (parsedNumber > 20 || parsedNumber < 1) {\n            alanBtn().playText(\"Please try that again\");\n          } else {\n            const id = results[parsedNumber - 1].id;\n\n            const trailer = async (id) => {\n              const url = await fetchMovieURL(id);\n              if (url == null || url == undefined) {\n                alanBtn().playText(\n                  \"Sorry there is no movie trailer for that movie\"\n                );\n              } else {\n                window.open(url, \"_blank\");\n              }\n            };\n            trailer(id);\n          }\n        } else if (command === \"openShow\") {\n          let parsedNumber =\n            number.length > 2\n              ? wordsToNumbers(number, { fuzzy: true })\n              : number;\n\n          if (typeof parsedNumber == \"string\") {\n            parsedNumber = parseInt(parsedNumber);\n          }\n\n          if (parsedNumber > 20 || parsedNumber < 1) {\n            alanBtn().playText(\"Please try that again\");\n          } else {\n            const id = results[parsedNumber - 1].id;\n\n            const trailer = async (id) => {\n              const url = await fetchTVURL(id);\n\n              if (url == null || url == undefined) {\n                alanBtn().playText(\n                  \"Sorry there is no trailer listed for that show\"\n                );\n              } else {\n                window.open(url, \"_blank\");\n              }\n            };\n\n            trailer(id);\n          }\n        }\n      },\n    });\n  }, []);\n\n  return (\n    <div>\n      <div\n        style={{\n          width: \"50%\",\n          margin: \"auto\",\n          boxSizing: \"border-box\",\n          overflowWrap: \"break-word\",\n        }}\n      >\n        <h1>Movie Search</h1>\n      </div>\n      <div className={classes.logoContainer}>\n        <img\n          src=\"https://wwwimage-secure.cbsstatic.com/base/files/seo/paramount-movies.jpg\"\n          className={classes.movieLogo}\n        />\n      </div>\n      <MovieCards\n        movieTitles={movieTitles}\n        activeTitle={activeTitle}\n      ></MovieCards>\n    </div>\n  );\n};\n\nexport default App;\n","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCards/MovieCards.js",["60","61","62"],"import React, { useState, useEffect, createRef } from \"react\";\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport { Grid, Grow, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles.js\";\n\nconst infoCards = [\n  {\n    color: \"#1565c0\",\n    title: \"Lastest Movies\",\n    text: \"Give me movies now playing\",\n  },\n  {\n    color: \"#00838f\",\n    title: \"Movies by title\",\n    info:\n      \"Movies: Batman, Avengers, Pirates of the Carribean, Mulan, Soul, etc...\",\n    text: \"Give me movies named\",\n  },\n  {\n    color: \"#4527a0\",\n    title: \"Movies/TV Shows related to actor/actress\",\n    info:\n      \"Actors/Actresses: Tom Hanks, Will Smith, Angelina Jolie, Johnny Deep, Julie Roberts, Tom, etc...\",\n    text: \"Give me movies with actor/actress\",\n  },\n  {\n    color: \"#C3130D\",\n    title: \"TV Shows by title\",\n    info:\n      \"TV shows: Game of Thrones, Family Guy, Law and Order, Breaking Bad, etc...\",\n    text: \"Give me TV shows named \",\n  },\n];\n\nconst MovieCards = ({ movieTitles, activeTitle }) => {\n  const classes = useStyles();\n\n  if (!movieTitles.length) {\n    return (\n      <Grow in>\n        <Grid\n          className={classes.container}\n          container\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          {infoCards.map((infoCard) => (\n            <Grid\n              item\n              xs={12}\n              sm={6}\n              md={4}\n              lg={3}\n              className={classes.infoCard}\n            >\n              <div\n                className={classes.card}\n                style={{ backgroundColor: infoCard.color }}\n              >\n                <Typography variant=\"h5\" className={classes.card_text}>\n                  {infoCard.title}\n                </Typography>\n                {infoCard.info ? (\n                  <Typography variant=\"h6\" className={classes.card_text}>\n                    <br />\n                    {infoCard.info}\n                  </Typography>\n                ) : null}\n                <Typography varaint=\"h6\" className={classes.saying_text}>\n                  Try saying: <br />\n                  <i>{infoCard.text}</i>\n                </Typography>\n              </div>\n            </Grid>\n          ))}\n        </Grid>\n      </Grow>\n    );\n  }\n\n  return (\n    <Grow in>\n      <Grid\n        className={classes.container}\n        container\n        spacing={3}\n        alignContent=\"stretch\"\n      >\n        {movieTitles.map((movieTitle, i) => (\n          <Grid item xs={12} sm={6} md={4} lg={3} style={{ display: \"flex\" }}>\n            <MovieCard\n              movieTitle={movieTitle}\n              activeTitle={activeTitle}\n              i={i}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Grow>\n  );\n};\n\nexport default MovieCards;\n","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCard/MovieCard.js",["63","64","65","66","67","68","69","70","71","72","73","74","75"],"import React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\nimport useStyles from \"./styles.js\";\nimport classNames from \"classnames\";\nimport ActorCard from \"../ActorCard/ActorCards\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { fetchMovieDetails, fetchTvDetails } from \"../../services/index.js\";\n\nconst MovieCard = ({\n  movieTitle: {\n    overview,\n    release_date,\n    title,\n    poster_path,\n    name,\n    first_air_date,\n    known_for,\n    profile_path,\n    id,\n  },\n  i,\n  activeTitle,\n}) => {\n  const classes = useStyles();\n  const [details, setDetails] = useState([]);\n  const [runTime, setRunTime] = useState(\"\");\n  const [tvDetails, setTvDetails] = useState([]);\n\n  function timeConvert(n) {\n    var num = n;\n    var hours = num / 60;\n    var rhours = Math.floor(hours);\n    var minutes = (hours - rhours) * 60;\n    var rminutes = Math.round(minutes);\n    if (rhours === 0) {\n      return rminutes + \" min\";\n    }\n\n    return rhours + \"h \" + rminutes + \"min\";\n  }\n\n  if (known_for) {\n    let arr = [];\n    known_for.map((item) => {\n      arr.push({\n        movie_title: item.title,\n        movie_url: item.poster_path,\n        movie_name: item.name,\n        movie_orginal_title: item.orginal_title,\n      });\n    });\n\n    return (\n      <ActorCard\n        name={name}\n        known_for={known_for}\n        profile_path={profile_path}\n        arr={arr}\n        activeTitle={activeTitle}\n        i={i}\n      ></ActorCard>\n    );\n  }\n\n  return (\n    <>\n      <Snackbar\n        style={{ paddingTop: \"4rem\" }}\n        open={true}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        message={\n          title != null\n            ? 'Commands: \"yes\", \"no\", \"go back\", \"Show me trailer for movie number...\" '\n            : 'Commands: \"yes\", \"no\", \"go back\" \"Show me trailer for show number...\" '\n        }\n      ></Snackbar>\n      <Card\n        className={classNames(\n          classes.card,\n          activeTitle === i ? classes.activeCard : null\n        )}\n      >\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={\n              poster_path != null\n                ? \"https://image.tmdb.org/t/p/w185\" + poster_path\n                : \"https://i.pinimg.com/originals/c8/50/ff/c850ff543a0485c5f53aacb4cf024dca.png\"\n            }\n          />\n          <div className={classes.details}>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"h2\"\n              className={classes.date_text}\n            >\n              {release_date != null\n                ? release_date.split(\"-\")[0]\n                : first_air_date != null\n                ? first_air_date.split(\"-\")[0]\n                : \"Release Unknown\"}\n            </Typography>\n          </div>\n          <Typography className={classes.title} gutterBottom variant=\"h5\">\n            {title} {name}\n          </Typography>\n          <CardContent>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.text}\n            >\n              {overview != null && overview.length != 0 && overview != undefined\n                ? overview\n                : \"There was no description found for the movie listed\"}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions className={classes.cardActions}>\n          <Button size=\"small\" color=\"primary\">\n            Trailer\n          </Button>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {i + 1}\n          </Typography>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieCard;\n","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCards/styles.js",[],"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/MovieCard/styles.js",[],"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/styles.js",[],"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/ActorCard/ActorCards.js",["76","77","78"],"import React from \"react\";\nimport useStyles from \"./styles.js\";\nimport classNames from \"classnames\";\nimport {\n  Card,\n  CardActions,\n  CardActionArea,\n  CardContent,\n  CardMedia,\n  Typography,\n  Grid,\n  GridList,\n  GridListTile,\n  GridListTileBar,\n  ListSubheader,\n} from \"@material-ui/core\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nconst ActorCards = ({\n  known_for: { title },\n  name,\n  profile_path,\n  arr,\n  activeTitle,\n  i,\n}) => {\n  const classes = useStyles();\n  console.log(arr);\n\n  return (\n    <>\n      <Snackbar\n        open=\"true\"\n        anchorOrigin={{ vertical: \"top\", horizontal: \"left\" }}\n        message='Commands: \"yes\", \"no\", \"go back\" '\n      ></Snackbar>\n\n      <Card\n        className={classNames(\n          classes.card,\n          activeTitle === i ? classes.activeCard : null\n        )}\n      >\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={\n              profile_path != null\n                ? \"https://image.tmdb.org/t/p/w185\" + profile_path\n                : \"https://creston.k12.mt.us/wp-content/uploads/2014/12/blank-profile.png\"\n            }\n          />\n          <Typography className={classes.title} gutterBottom variant=\"h5\">\n            {name}\n          </Typography>\n\n          <CardContent className={classes.content}>\n            <GridList cellHeight=\"auto\" className={classes.gridList}>\n              {arr.map((value) => (\n                <GridListTile cols={arr.length === 1 ? 1 : 2}>\n                  <img\n                    src={\n                      value.movie_url != null\n                        ? \"https://image.tmdb.org/t/p/w185\" + value.movie_url\n                        : \"https://i.pinimg.com/originals/c8/50/ff/c850ff543a0485c5f53aacb4cf024dca.png\"\n                    }\n                    style={{\n                      height: \"150px\",\n                      width: \"100px\",\n                    }}\n                  />\n\n                  <GridListTileBar\n                    style={{ fontSize: \"12px\" }}\n                    title={\n                      value.movie_title != null\n                        ? value.movie_title\n                        : value.movie_name != null\n                        ? value.movie_name\n                        : value.movie_orginal_title != null\n                        ? value.movie_orginal_title\n                        : \"unknown title\"\n                    }\n                    className={classes.titleBar}\n                  />\n                </GridListTile>\n              ))}\n            </GridList>\n          </CardContent>\n        </CardActionArea>\n\n        <CardActions className={classes.cardActions}>\n          <Typography variant=\"h5\" color=\"textSecondary\">\n            {i + 1}\n          </Typography>\n        </CardActions>\n      </Card>\n    </>\n  );\n};\n\nexport default ActorCards;\n","/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/components/ActorCard/styles.js",[],["79","80"],"/Users/josegarcia/Desktop/Projects/ai_nav/ai_nav/src/services/index.js",["81","82","83","84"],"import axios from \"axios\";\n\nconst API_KEY = \"924171499ba90abe211d9784a4e4be50\";\nconst youtube_url = \"https://www.youtube.com/watch?v=\";\nlet movie_results = [];\nlet tv_results = [];\n\nexport const fetchMovieURL = async (id) => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/videos?api_key=${API_KEY}`,\n      {}\n    );\n\n    const result = youtube_url + data[\"results\"][0].key;\n    console.log(\"url in index is \" + result);\n\n    return result;\n  } catch (error) {}\n};\n\nexport const fetchTVURL = async (id) => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/tv/${id}/videos?api_key=${API_KEY}`,\n      {}\n    );\n\n    const result = youtube_url + data[\"results\"][0].key;\n    console.log(result);\n    return result;\n  } catch (error) {}\n};\n\nexport const fetchMovieDetails = async (id) => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`,\n\n      {}\n    );\n    let arr = [];\n    const runtime = data[\"runtime\"];\n    const genre = data[\"genres\"];\n    const title = data[\"title\"];\n    arr.push({ title: title });\n    arr.push({ run_time: runtime });\n    genre.map((genre) => {\n      arr.push({\n        name: genre.name,\n      });\n    });\n\n    return arr;\n  } catch (error) {}\n};\nexport const fetchTvDetails = async (id) => {\n  try {\n    const { data } = await axios.get(\n      `https://api.themoviedb.org/3/tv/${id}?api_key=${API_KEY}`,\n      {}\n    );\n\n    let arr = [];\n    const runtime = data[\"runtime\"];\n    const genre = data[\"genres\"];\n\n    arr.push({ runtime: runtime });\n\n    genre.map((genre) => {\n      arr.push({\n        name: genre.name,\n      });\n    });\n\n    return arr;\n  } catch (error) {}\n};\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":20},{"ruleId":"89","severity":1,"message":"93","line":6,"column":8,"nodeType":"91","messageId":"92","endLine":6,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":10,"column":7,"nodeType":"91","messageId":"92","endLine":10,"endColumn":14},{"ruleId":"89","severity":1,"message":"95","line":16,"column":10,"nodeType":"91","messageId":"92","endLine":16,"endColumn":13},{"ruleId":"89","severity":1,"message":"96","line":16,"column":15,"nodeType":"91","messageId":"92","endLine":16,"endColumn":21},{"ruleId":"89","severity":1,"message":"97","line":17,"column":9,"nodeType":"91","messageId":"92","endLine":17,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":46,"column":38,"nodeType":"100","messageId":"101","endLine":46,"endColumn":40},{"ruleId":"98","severity":1,"message":"99","line":74,"column":38,"nodeType":"100","messageId":"101","endLine":74,"endColumn":40},{"ruleId":"102","severity":1,"message":"103","line":103,"column":9,"nodeType":"104","endLine":106,"endColumn":11},{"ruleId":"89","severity":1,"message":"105","line":1,"column":17,"nodeType":"91","messageId":"92","endLine":1,"endColumn":25},{"ruleId":"89","severity":1,"message":"106","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"107","line":1,"column":38,"nodeType":"91","messageId":"92","endLine":1,"endColumn":47},{"ruleId":"89","severity":1,"message":"106","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"108","line":15,"column":10,"nodeType":"91","messageId":"92","endLine":15,"endColumn":27},{"ruleId":"89","severity":1,"message":"109","line":15,"column":29,"nodeType":"91","messageId":"92","endLine":15,"endColumn":43},{"ruleId":"89","severity":1,"message":"110","line":33,"column":10,"nodeType":"91","messageId":"92","endLine":33,"endColumn":17},{"ruleId":"89","severity":1,"message":"111","line":33,"column":19,"nodeType":"91","messageId":"92","endLine":33,"endColumn":29},{"ruleId":"89","severity":1,"message":"112","line":34,"column":10,"nodeType":"91","messageId":"92","endLine":34,"endColumn":17},{"ruleId":"89","severity":1,"message":"113","line":34,"column":19,"nodeType":"91","messageId":"92","endLine":34,"endColumn":29},{"ruleId":"89","severity":1,"message":"114","line":35,"column":10,"nodeType":"91","messageId":"92","endLine":35,"endColumn":19},{"ruleId":"89","severity":1,"message":"115","line":35,"column":21,"nodeType":"91","messageId":"92","endLine":35,"endColumn":33},{"ruleId":"89","severity":1,"message":"116","line":37,"column":12,"nodeType":"91","messageId":"92","endLine":37,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":52,"column":26,"nodeType":"119","messageId":"120","endLine":52,"endColumn":28},{"ruleId":"98","severity":1,"message":"121","line":124,"column":52,"nodeType":"100","messageId":"101","endLine":124,"endColumn":54},{"ruleId":"98","severity":1,"message":"121","line":124,"column":69,"nodeType":"100","messageId":"101","endLine":124,"endColumn":71},{"ruleId":"89","severity":1,"message":"122","line":11,"column":3,"nodeType":"91","messageId":"92","endLine":11,"endColumn":7},{"ruleId":"89","severity":1,"message":"123","line":15,"column":3,"nodeType":"91","messageId":"92","endLine":15,"endColumn":16},{"ruleId":"102","severity":1,"message":"103","line":61,"column":19,"nodeType":"104","endLine":71,"endColumn":21},{"ruleId":"85","replacedBy":"124"},{"ruleId":"87","replacedBy":"125"},{"ruleId":"89","severity":1,"message":"126","line":5,"column":5,"nodeType":"91","messageId":"92","endLine":5,"endColumn":18},{"ruleId":"89","severity":1,"message":"127","line":6,"column":5,"nodeType":"91","messageId":"92","endLine":6,"endColumn":15},{"ruleId":"117","severity":1,"message":"118","line":48,"column":23,"nodeType":"119","messageId":"120","endLine":48,"endColumn":25},{"ruleId":"117","severity":1,"message":"118","line":70,"column":23,"nodeType":"119","messageId":"120","endLine":70,"endColumn":25},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'movieReel' is defined but never used.","'alanKey' is assigned a value but never used.","'url' is assigned a value but never used.","'setURL' is assigned a value but never used.","'target' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'useEffect' is defined but never used.","'createRef' is defined but never used.","'fetchMovieDetails' is defined but never used.","'fetchTvDetails' is defined but never used.","'details' is assigned a value but never used.","'setDetails' is assigned a value but never used.","'runTime' is assigned a value but never used.","'setRunTime' is assigned a value but never used.","'tvDetails' is assigned a value but never used.","'setTvDetails' is assigned a value but never used.","'timeConvert' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","'Grid' is defined but never used.","'ListSubheader' is defined but never used.",["128"],["129"],"'movie_results' is assigned a value but never used.","'tv_results' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]